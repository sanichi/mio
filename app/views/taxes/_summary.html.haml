- income        = taxes.map{ |t| t.income * t.times }
- income_total  = income.reduce(0, :+)
- income_notes  = income.join(" + ")
- taxable       = taxes.map{ |t| (t.income * t.times * (1.0 - t.free / 100.0)).round }
- taxable_total = taxable.reduce(0, :+)
- taxable_notes = taxable.join(" + ")
- rate          = Tax::TAX_RATE[year_number]
- allowance     = Tax::ANNUAL_ALLOWANCE[year_number]
- due           = taxable_total <= allowance ? 0 : ((taxable_total - allowance) * rate / 100.0).round
- due_notes     = taxable_total <= allowance ? "#{taxable_total} < #{allowance}" : "(%d - %d) × %.2f" % [taxable_total, allowance, rate / 100.0]
- paid          = taxes.reject{ |t| t.paid == 0 }.map{ |t| t.paid * t.times }
- paid_total    = paid.reduce(0, :+)
- paid_notes    = paid.join(" + ")
- refund        = paid_total - due
- refund_notes  = [paid_total, due].reject{ |v| v == 0 }.join(" − ")
- unpaid        = due - paid_total
- unpaid_notes  = [due, paid_total].reject{ |v| v == 0 }.join(" − ")


%tr
  %td= t("tax.income")
  %td.text-center= income_total
  %td= income_notes
%tr
  %td= t("tax.taxable")
  %td.text-center= taxable_total
  %td= taxable_notes
%tr
  %td= t("tax.allowance")
  %td.text-center= allowance
  %td
%tr
  %td= t("tax.due")
  %td.text-center= due
  %td= due_notes
%tr
  %td= t("tax.paid")
  %td.text-center= paid_total
  %td= paid_notes
- if refund > 0
  %tr
    %td= t("tax.refund")
    %td.text-center= refund
    %td= refund_notes
- if unpaid > 0
  %tr
    %td= t("tax.unpaid")
    %td.text-center= unpaid
    %td= unpaid_notes
