= render "utils/title", key: "tapa.tapas", header: true

= content_for :javascript do
  = render "tapas.js"

= form_tag tapas_path, method: :get, remote: true, class: "form-inline justify-content-center" do
  = label_tag :number, t("tapa.number"), class: "sr-only"
  = text_field_tag :number, params[:number], class: "form-control mr-1 mb-1", placeholder: t("tapa.number"), size: 10
  = label_tag :query, t("tapa.query"), class: "sr-only"
  = text_field_tag :query, params[:query], class: "form-control mr-1 mb-1", placeholder: t("tapa.query"), size: 30
  = label_tag :other, t("other"), class: "sr-only"
  = select_tag :other, tapa_other_search_menu(params[:other]), class: "form-control mr-1 mb-1 auto-submit"
  = button_tag t("search"), type: "submit", class: "btn btn-success mr-1 mb-1"
  = link_to t("reset"), "#", class: "btn btn-secondary mr-1 mb-1", id: "reset"

.row.mt-3
  .col-lg-10.offset-lg-1
    %table{class: "table table-bordered table-striped"}
      %thead
        %tr
          %th.text-center= t("tapa.short.number")
          %th= t("tapa.title")
          %th= t("tapa.keywords")
          %th.text-center= t("notes")
          - if can?(:edit, Tapa)
            %th
      %tbody{id: "results"}
        = render "results", tapas: @tapas

.text-center.mt-3
  - if can?(:create, Tapa)
    = link_to t("tapa.new"), new_tapa_path, class: "btn btn-info"
  = render "utils/help_button"

= render "notes_popup"

- content_for :help_title do
  = t("tapa.help.search")
- content_for :help do
  %p
    This is a searchable list of Avdi Grimm's
    = link_to "Ruby Tapas", Tapa::URL, target: "external"
    screencasts.
  %p Constrain the search with:
  %ul
    %li
      = succeed(":") do
        %strong= t("tapa.number")
      enter a single number (e.g. "1"),
      an inequality (e.g. "> 100" or "<= 200") or
      a range (e.g. "100-200").
    %li
      = succeed(":") do
        %strong= t("tapa.query")
      enter a substring to match (case insensitively) at least one of these attributes.
  %p When ready to search, hit the "Enter" key or click "Search".
  %p
    Note that keywords sometimes consist of a class name,
    followed by a hash (instance method) or period (class method),
    followed by a method name (e.g. "Fixnum#to_s", "Dir.home").
  %ul
    %li
      = t("symbol.star")
      marks the most interesting (for me at least) episodes,
    %li
      = t("symbol.note")
      marks epidodes for which I've supplied additional notes (click the green button to view).
