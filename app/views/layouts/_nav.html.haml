%nav{class: "navbar navbar-default", role: "navigation"}
  .navbar-header
    %button{class: "navbar-toggle", type: "button", "data-toggle" => "collapse", "data-target" => ".navbar-ex1-collapse"}
      %span.icon-bar
      %span.icon-bar
      %span.icon-bar
  .collapse.navbar-collapse.navbar-ex1-collapse
    %ul.nav.navbar-nav

      - if can?(:read, Blog)
        %li= link_to t("blog.blog"), blogs_path

      - if [Person, Picture, Partnership, HistoricalEvent].map{|c| can?(:read, c) }.any?
        %li.dropdown
          = link_to "#", class: "dropdown-toggle", data: { toggle: "dropdown" } do
            = t("family")
            %b.caret
          %ul.dropdown-menu
            - if can?(:tree, Person)
              %li= link_to t("person.tree"), tree_people_path
            - if can?(:read, Person)
              %li= link_to t("person.people"), people_path
            - if can?(:read, Picture)
              %li= link_to t("picture.pictures"), pictures_path
            - if can?(:read, Partnership)
              %li= link_to t("partnership.partnerships"), partnerships_path
            - if can?(:checks, Person)
              %li= link_to t("person.checks.title"), checks_people_path
            - if can?(:read, HistoricalEvent)
              %li= link_to t("historical_event.events"), historical_events_path

      - if can?(:read, Todo)
        %li.dropdown
          = link_to "#", class: "dropdown-toggle", data: { toggle: "dropdown" } do
            = t("todo.todos")
            %b.caret
          %ul.dropdown-menu
            %li= link_to t("todo.elm.app"), elm_todos_path
            %li= link_to t("todo.rails"), todos_path

      - if [Resident, Flat, Vehicle, Parking].map{ |c| can?(:read, c) }.any? || [:pam, :risle, :deeds].map{ |a| can?(a, Page) }.any?
        %li.dropdown
          = link_to "#", class: "dropdown-toggle", data: { toggle: "dropdown" } do
            = t("pages.risle.name")
            %b.caret
          %ul.dropdown-menu
            - if can?(:risle, Page)
              %li= link_to t("map"), risle_path
            - if can?(:pam, Page)
              %li= link_to t("pages.pam"), pam_path
            - if can?(:read, Resident)
              %li= link_to t("resident.residents"), residents_path
            - if can?(:read, Flat)
              %li= link_to t("flat.flats"), flats_path
            - if can?(:read, Vehicle)
              %li= link_to t("vehicle.vehicles"), vehicles_path
            - if can?(:read, Parking)
              %li= link_to t("parking.parkings"), parkings_path
            - if can?(:deeds, Page)
              %li= link_to t("flat.deeds"), deeds_path

      - if [Income, Trade, Fund, Transaction, Expense].map{|c| can?(:read, c) }.any?
        %li.dropdown
          = link_to "#", class: "dropdown-toggle", data: { toggle: "dropdown" } do
            = t("money")
            %b.caret
          %ul.dropdown-menu
            - if can?(:read, Income)
              %li= link_to t("income.incomes"), graph_incomes_path
            - if can?(:read, Trade)
              %li= link_to t("trade.trades"), trades_path
            - if can?(:read, Fund)
              %li= link_to t("fund.funds"), funds_path
            - if can?(:read, Transaction)
              %li= link_to t("transaction.transactions"), summary_transactions_path
            - if can?(:read, Expense)
              %li= link_to t("expense.expenses"), expenses_path

      - if [Position, Opening].map{|c| can?(:read, c) }.any?
        %li.dropdown
          = link_to "#", class: "dropdown-toggle", data: { toggle: "dropdown" } do
            = t("chess")
            %b.caret
          %ul.dropdown-menu
            - if can?(:read, Position)
              %li= link_to t("position.positions"), positions_path
            - if can?(:read, Opening)
              %li= link_to t("opening.openings"), openings_path

      - if [Vocab, VocabTest, VerbPair, Kanji, Reading, Conversation, KanjiTest, SimilarWord, SimilarKanji, Occupation, Note, Misa].map{ |c| can?(:read, c) }.any?
        %li.dropdown
          = link_to "#", class: "dropdown-toggle", data: { toggle: "dropdown" } do
            = t("vocab.japanese")
            %b.caret
          %ul.dropdown-menu
            - if can?(:read, Vocab)
              %li= link_to t("vocab.vocabs"), vocabs_path
            - if can?(:read, Kanji)
              %li= link_to t("vocab.kanjis"), kanjis_path
            - if can?(:read, Reading)
              %li= link_to t("vocab.readings"), readings_path
            - if can?(:read, Vocab)
              %li= link_to t("vocab.verb.verbs"), verbs_vocabs_path
            - if can?(:read, VerbPair)
              %li= link_to t("verb_pair.verb_pairs"), verb_pairs_path
            - if can?(:read, VocabTest)
              %li= link_to t("vocab.test.tests"), vocab_tests_path
            - if can?(:read, KanjiTest)
              %li= link_to t("vocab.kanji_test.tests"), kanji_tests_path
            - if can?(:read, Vocab)
              %li= link_to t("vocab.similar.words"), similar_words_path
              %li= link_to t("vocab.similar.kanjis"), similar_kanjis_path
              %li= link_to t("vocab.occupation.occupations"), occupations_path
              %li= link_to t("vocab.homonyms"), homonyms_vocabs_path
            - if can?(:read, Misa)
              %li= link_to t("misa.misas"), misas_path
            - if can?(:read, Note)
              %li= link_to t("vocab.note.notes"), notes_path
            - if can?(:read, Conversation)
              %li= link_to t("conversation.conversations"), conversations_path

      - if [:aoc, :magic, :play, :retina].map{ |p| can?(p, Page) }.any? || [Bucket, Device, Favourite, Interface, Login, Mass, Opening, Position, Tapa, User].map{ |c| can?(:read, c) }.any?
        %li.dropdown
          = link_to "#", class: "dropdown-toggle", data: { toggle: "dropdown" } do
            = t("other")
            %b.caret
          %ul.dropdown-menu
            - if can?(:read, Mass)
              %li= link_to t("mass.mass"), graph_masses_path
            - if can?(:read, Tapa)
              %li= link_to t("tapa.tapas"), tapas_path
            - if can?(:read, Bucket)
              %li= link_to t("bucket.buckets"), buckets_path
            - if can?(:read, Favourite)
              %li= link_to t("favourite.favourites"), favourites_path
            - if can?(:aoc, Page)
              %li= link_to t("pages.aoc.short"), aoc_path
            - if can?(:retina, Page)
              %li= link_to t("pages.retina"), retina_path
            - if can?(:magic, Page)
              %li= link_to t("pages.magic"), magic_path
            - if can?(:play, Page)
              %li= link_to t("pages.play"), play_path
            - if can?(:read, Device)
              %li= link_to t("device.devices"), devices_path
            - if can?(:read, Interface)
              %li= link_to t("interface.interfaces"), interfaces_path
            - if can?(:read, User)
              %li= link_to t("user.users"), users_path
            - if can?(:read, Login)
              %li= link_to t("login.logins"), logins_path

    %ul.nav.navbar-nav.navbar-right
      = render "layouts/sign_in_out"
