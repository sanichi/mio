- menu_size = 8

%nav{class: "navbar navbar-expand-lg navbar-light bg-light mb-3"}
  %button{class: "navbar-toggler", type: "button", "data-toggle" => "collapse", "data-target" => "#navbarNav", "aria-controls" => "navbarNav", "aria-expanded" => "false", "aria-label" => "Toggle navigation"}
    %span.navbar-toggler-icon
  .collapse.navbar-collapse#navbarNav
    .navbar-nav

    - if can?(:read, Blog)
      .nav-item
        = link_to t("home"), blogs_path, class: "nav-link"

    - if [Wk::Radical, Wk::Kanji, Wk::VerbPair, Note, Misa, Problem].map{ |c| can?(:read, c) }.any?
      .nav-item.dropdown
        = render "layouts/dropdown_head", text: t("wk.japanese", locale: "jp"), id: "navbarWaniKani"
        %div{class: "dropdown-menu", "aria-labelledby" => "navbarWaniKani"}
          = render "wk/vocabs/dropdown_menu", cond: can?(:read, Wk::Vocab), size: menu_size
          = render "wk/kanjis/dropdown_menu", cond: can?(:read, Wk::Kanji), size: menu_size
          = render "wk/radicals/dropdown_menu", cond: can?(:read, Wk::Radical), size: menu_size
          = render "wk/verb_pairs/dropdown_menu", cond: can?(:read, Wk::VerbPair), size: menu_size
          = render "layouts/dropdown_item", cond: can?(:read, Wk::VerbPair), text: t("wk.verb_pair.verb_pairs"), path: wk_verb_pairs_path
          = render "layouts/dropdown_item", cond: can?(:read, Misa), text: t("misa.misas"), path: misas_path
          = render "layouts/dropdown_item", cond: can?(:read, Note), text: t("note.notes"), path: notes_path
          = render "layouts/dropdown_item", cond: can?(:read, Problem), text: t("problem.problems"), path: problems_path

    - if [Person, Picture, Partnership, HistoricalEvent].map{|c| can?(:read, c) }.any?
      .nav-item.dropdown
        = render "layouts/dropdown_head", text: t("family"), id: "navbarFamilyMenu"
        %div{class: "dropdown-menu", "aria-labelledby" => "navbarFamilyMenu"}
          = render "layouts/dropdown_item", cond: can?(:tree, Person), text: t("person.tree"), path: tree_people_path
          = render "layouts/dropdown_item", cond: can?(:read, Person), text: t("person.people"), path: people_path
          = render "layouts/dropdown_item", cond: can?(:read, Picture), text: t("picture.pictures"), path: pictures_path
          = render "layouts/dropdown_item", cond: can?(:read, Partnership), text: t("partnership.partnerships"), path: partnerships_path
          = render "layouts/dropdown_item", cond: can?(:checks, Person), text: t("person.checks.title"), path: checks_people_path
          = render "layouts/dropdown_item", cond: can?(:read, HistoricalEvent), text: t("historical_event.events"), path: historical_events_path

    - if [Position, Opening, Lesson, Book].map{|c| can?(:read, c) }.any?
      .nav-item.dropdown
        = render "layouts/dropdown_head", text: t("chess"), id: "navbarChessMenu"
        %div{class: "dropdown-menu", "aria-labelledby" => "navbarChessMenu"}
          = render "layouts/dropdown_item", cond: can?(:read, Lesson), text: t("lesson.lessons"), path: lessons_path
          = render "layouts/dropdown_item", cond: can?(:read, Book), text: t("book.books"), path: books_path
          = render "layouts/dropdown_item", cond: can?(:read, Position), text: t("position.positions"), path: positions_path
          = render "layouts/dropdown_item", cond: can?(:read, Opening), text: t("opening.openings"), path: openings_path

    - if [Resident, Flat, Vehicle, Parking].map{ |c| can?(:read, c) }.any? || [:pam, :risle, :deeds].map{ |a| can?(a, Page) }.any?
      .nav-item.dropdown
        = render "layouts/dropdown_head", text: t("pages.risle.name"), id: "navbarRisleMenu"
        %div{class: "dropdown-menu", "aria-labelledby" => "navbarRisleMenu"}
          = render "layouts/dropdown_item", cond: can?(:risle, Page), text: t("map"), path: risle_path
          = render "layouts/dropdown_item", cond: can?(:pam, Page), text: t("pages.pam"), path: pam_path
          = render "layouts/dropdown_item", cond: can?(:read, Resident), text: t("resident.residents"), path: residents_path
          = render "layouts/dropdown_item", cond: can?(:read, Flat), text: t("flat.flats"), path: flats_path
          = render "layouts/dropdown_item", cond: can?(:read, Vehicle), text: t("vehicle.vehicles"), path: vehicles_path
          = render "layouts/dropdown_item", cond: can?(:read, Parking), text: t("parking.parkings"), path: parkings_path
          = render "layouts/dropdown_item", cond: can?(:deeds, Page), text: t("flat.deeds"), path: deeds_path

    - if [Income, Trade, Fund, Transaction, Expense].map{|c| can?(:read, c) }.any?
      .nav-item.dropdown
        = render "layouts/dropdown_head", text: t("money"), id: "navbarMoneyMenu"
        %div{class: "dropdown-menu", "aria-labelledby" => "navbarMoneyMenu"}
          = render "layouts/dropdown_item", cond: can?(:read, Income), text: t("income.incomes"), path: graph_incomes_path
          = render "layouts/dropdown_item", cond: can?(:read, Trade), text: t("trade.trades"), path: trades_path
          = render "layouts/dropdown_item", cond: can?(:read, Fund), text: t("fund.funds"), path: funds_path
          = render "layouts/dropdown_item", cond: can?(:read, Transaction), text: t("transaction.transactions"), path: summary_transactions_path
          = render "layouts/dropdown_item", cond: can?(:read, Expense), text: t("expense.expenses"), path: expenses_path

    - if [:aoc, :magic, :play].map{ |p| can?(p, Page) }.any? || [Bucket, Device, Dragon, Favourite, Interface, Login, Mass, Opening, Position, Tapa, User].map{ |c| can?(:read, c) }.any?
      .nav-item.dropdown
        = render "layouts/dropdown_head", text: t("other"), id: "navbarOtherMenu"
        %div{class: "dropdown-menu", "aria-labelledby" => "navbarOtherMenu"}
          = render "layouts/dropdown_item", cond: can?(:read, Mass), text: t("mass.mass"), path: graph_masses_path
          = render "layouts/dropdown_item", cond: can?(:read, Favourite), text: t("favourite.favourites"), path: favourites_path
          = render "layouts/dropdown_item", cond: can?(:read, Bucket), text: t("bucket.buckets"), path: buckets_path
          = render "layouts/dropdown_item", cond: can?(:read, Todo), text: t("todo.todos"), path: todos_path
          = render "layouts/dropdown_item", cond: can?(:aoc, Page), text: t("pages.aoc.short"), path: aoc_path
          = render "layouts/dropdown_item", cond: can?(:read, Tapa), text: t("tapa.tapas"), path: tapas_path
          = render "layouts/dropdown_item", cond: can?(:read, Dragon), text: t("dragon.dragons"), path: dragons_path
          = render "layouts/dropdown_item", cond: can?(:magic, Page), text: t("pages.magic"), path: magic_path
          = render "layouts/dropdown_item", cond: can?(:play, Page), text: t("pages.play"), path: play_path
          = render "layouts/dropdown_item", cond: can?(:read, Device), text: t("device.devices"), path: devices_path
          = render "layouts/dropdown_item", cond: can?(:read, Interface), text: t("interface.interfaces"), path: interfaces_path
          = render "layouts/dropdown_item", cond: can?(:read, User), text: t("user.users"), path: users_path
          = render "layouts/dropdown_item", cond: can?(:read, Login), text: t("login.logins"), path: logins_path

    .nav-item.ml-auto
      - if authenticated?
        = link_to t("session.sign_out"), sign_out_path, class: "nav-link"
      - else
        = link_to t("session.sign_in"), sign_in_path, class: "nav-link"
